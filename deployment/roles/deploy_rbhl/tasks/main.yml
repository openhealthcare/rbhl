- name: Setup the Git repo
  git: repo={{ GIT_REPO }}
       version={{ GIT_BRANCH }}
       dest={{ PROJECT_PATH }}
       accept_hostkey=yes
       force=yes

- name: Create configs
  template:
    src: "templates/{{ item }}.jinja2"
    dest: "{{ PROJECT_PATH }}/etc/{{ item }}"
    mode: 0744
    owner: ubuntu
  with_items:
    - gunicorn.conf
    - gunicorn_conf.py
    - nginx_site.conf

- name: Create local settings
  template:
    src: "templates/local_settings.py.jinja2"
    dest: "{{ PROJECT_PATH }}/{{ PROJECT_NAME }}/local_settings.py"
    mode: 0744
    owner: ubuntu

- name: Install packages required by the Django app inside virtualenv
  pip: virtualenv="{{ VIRTUALENV_PATH }}" requirements="{{ PROJECT_PATH }}/{{ REQUIREMENTS_FILE }}"

- name: Run Django database migrations
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "{{ VIRTUALENV_PATH }}/bin/python manage.py migrate"

- name: Run Django collectstatic
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "{{ VIRTUALENV_PATH }}/bin/python manage.py collectstatic --noinput"

- name: Create singletons
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "{{ VIRTUALENV_PATH }}/bin/python manage.py create_singletons"

- name: Load lookuplists
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "{{ VIRTUALENV_PATH }}/bin/python manage.py load_lookup_lists"

- name: Clinic activity facts cron
  cron:
    name: "Generate clinic activities facts"
    hour: 1
    job: "{{ VIRTUALENV_PATH }}/bin/python {{ PROJECT_PATH}}/manage.py generate_clinic_facts"

- name: Check management commands cron
  cron:
    name: "Check management commands cron"
    hour: 8
    job: "{{ VIRTUALENV_PATH }}/bin/python {{ PROJECT_PATH}}/manage.py mgmt_cmd_status"

- name: Remove old nginx default
  become: true
  file:
    state: absent
    path: "/etc/nginx/sites-available/default"

- name: Symlink nginx
  become: true
  template:
    src: "templates/nginx.blank.conf"
    dest: "/etc/nginx/sites-available/default"
    owner: root
    group: root

- name: Stop circus
  become: yes
  command: "circusctl stop"
  ignore_errors: True

- name: Restart nginx
  become: true
  service:
    name: nginx
    state: restarted
    enabled: yes

- name: add the Launchpad key ID
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 14aa40ec0831756756d7f66c4f4ea0aae5267a6c

- name: add certbot PPA
  become: true
  apt_repository:
    repo: 'ppa:certbot/certbot'
    update_cache: true

- name: install certbot
  become: true
  apt:
    pkg: python-certbot-nginx
    state: present

- name: generate cert with Lets Encrypt
  become: true
  command: "certbot certonly --nginx -n -d {{ DOMAIN }} --agree-tos -m support@openhealthcare.org.uk"

- name: Remove old nginx default
  become: true
  file:
    state: absent
    path: "/etc/nginx/sites-available/default"

- name: Symlink nginx
  become: true
  file:
    src: "{{ PROJECT_PATH }}/etc/nginx_site.conf"
    dest: "/etc/nginx/sites-available/default"
    owner: root
    group: root
    state: link

- name: Restart nginx
  become: true
  service:
    name: nginx
    state: restarted
    enabled: yes

- name: Create circus config
  become: yes
  template:
    src: "templates/circus.ini.jinja2"
    dest: "/etc/circus/circusd.ini"
